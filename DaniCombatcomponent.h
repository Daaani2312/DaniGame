#pragma once

#include "CoreMinimal.h"
#include "Components/ActorComponent.h"
#include "DaniCombatTypes.h"
#include "DaniCombatComponent.generated.h"

class UDaniCombatStyleBase;

DECLARE_DYNAMIC_MULTICAST_DELEGATE(FOnCombatModeChanged);
DECLARE_DYNAMIC_MULTICAST_DELEGATE_TwoParams(FOnCombatStyleChanged, TSubclassOf<UDaniCombatStyleBase>, OldStyle, TSubclassOf<UDaniCombatStyleBase>, NewStyle);

UCLASS(ClassGroup = (Custom), meta = (BlueprintSpawnableComponent))
class DANIGAME_API UDaniCombatComponent : public UActorComponent
{
    GENERATED_BODY()

public:
    UDaniCombatComponent();

protected:
    virtual void BeginPlay() override;
    virtual void EndPlay(const EEndPlayReason::Type EndPlayReason) override;

public:
    // ??? COMBAT CONTROL ????????????????????????????????????????????
    UFUNCTION(BlueprintCallable, Category = "Combat")
    void SetCombatMode(bool bEnabled);

    UFUNCTION(BlueprintCallable, Category = "Combat")
    void SwitchCombatStyle(TSubclassOf<UDaniCombatStyleBase> NewStyleClass);

    // ??? INPUT INTERFACE ???????????????????????????????????????????
    UFUNCTION(BlueprintCallable, Category = "Combat")
    void ExecuteAttack(int32 AttackIndex = 0);

    UFUNCTION(BlueprintCallable, Category = "Combat")
    void StartBlock();

    UFUNCTION(BlueprintCallable, Category = "Combat")
    void EndBlock();

    UFUNCTION(BlueprintCallable, Category = "Combat")
    void ActivateAbility(int32 AbilityIndex);

    UFUNCTION(BlueprintCallable, Category = "Combat")
    void ReloadWeapon();

    // ??? STATE QUERIES ?????????????????????????????????????????????
    UFUNCTION(BlueprintPure, Category = "Combat")
    bool IsInCombatMode() const { return bCombatModeActive; }

    UFUNCTION(BlueprintPure, Category = "Combat")
    TSubclassOf<UDaniCombatStyleBase> GetCurrentStyleClass() const;

    // ??? EVENTS ????????????????????????????????????????????????????
    UPROPERTY(BlueprintAssignable, Category = "Combat|Events")
    FOnCombatModeChanged OnCombatModeEnabled;

    UPROPERTY(BlueprintAssignable, Category = "Combat|Events")
    FOnCombatModeChanged OnCombatModeDisabled;

    UPROPERTY(BlueprintAssignable, Category = "Combat|Events")
    FOnCombatStyleChanged OnCombatStyleChanged;

private:
    // ??? COMBAT STATE ??????????????????????????????????????????????
    UPROPERTY()
    bool bCombatModeActive = false;

    UPROPERTY()
    UDaniCombatStyleBase* CurrentCombatStyle = nullptr;

    // ??? STYLE MANAGEMENT ??????????????????????????????????????????
    void CleanupCurrentStyle();
    void InitializeNewStyle(TSubclassOf<UDaniCombatStyleBase> StyleClass);
}; #pragma once
